name: Deploy Lambda to AWS

on:
  push:
    branches: [ main ]  # change or add `workflow_dispatch` for manual trigger
    workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy Lambda
    runs-on: ubuntu-latest

    env:
      FUNCTION_NAME: my-test-lambda 
      HANDLER_FILE: find_nearest_volunteers.py
      PYTHON_VERSION: "3.9"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # - name: Build deployment package with Docker
    #   run: |
    #     mkdir lambda_build
    #     cp *.py lambda_build/

    #     docker run --rm -v "$PWD/lambda_build":/app amazonlinux:2 /bin/bash -c "
    #       yum update -y &&
    #       yum install -y gcc python3 python3-devel postgresql postgresql-devel zip &&
    #       python3 -m ensurepip --upgrade &&
    #       python3 -m pip install --upgrade pip &&
    #       cd /app &&
    #       python3 -m pip install psycopg2 s2sphere -t . &&
    #       zip -r9 lambda.zip .
    #     "

    - name: Build deployment package with Docker
      run: |
        mkdir lambda_build
        cp *.py lambda_build/
  
        docker run --rm -v "$PWD/lambda_build":/app amazonlinux:2023 /bin/bash -c "
          yum install -y gcc python3 python3-devel postgresql-devel zip &&
          python3 -m ensurepip --upgrade &&
          pip3 install --upgrade pip &&
          pip3 install psycopg2-binary s2sphere -t /app &&
          cd /app &&
          zip -r9 lambda.zip .
        "
  
    - name: List contents of lambda_build
      run: ls -lh lambda_build
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy Lambda Code
      run: |
        aws lambda update-function-code \
        --function-name "$FUNCTION_NAME" \
        --zip-file fileb://lambda_build/lambda.zip

    - name: Update Lambda Handler
      run: |
        sleep 10
        aws lambda update-function-configuration \
        --function-name "$FUNCTION_NAME" \
        --handler "${HANDLER_FILE%.py}.lambda_handler"

    - name: Update Environment Variables (Retry on conflict)
      run: |
        echo "Waiting for Lambda function to be ready for configuration update..."
        sleep 10
        aws lambda update-function-configuration \
        --function-name "$FUNCTION_NAME" \
        --environment "Variables={
          DB_HOST='${{ secrets.DB_HOST }}',
          DB_PORT='${{ secrets.DB_PORT }}',
          DB_NAME='${{ secrets.DB_NAME }}',
          DB_USER='${{ secrets.DB_USER }}',
          DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
        }"
